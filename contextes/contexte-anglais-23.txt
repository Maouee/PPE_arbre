    1. Bytecode interpreter
    2. Threaded code interpreter
    3. Abstract syntax tree interpreter
    4. Justin-in-time compilation

--

   If you’re a TypeScript developer with some familiarity of the TypeScript
   architecture, you may have heard about the abstract syntax tree (AST).

   AST is an approach to transform the source code into an optimized abstract
   syntax tree, then execute the program following this tree structure, or
   use it to generate native code just-in-time.

--

   However, for interpreters, AST causes more overhead. Interpreters walking
   the abstract syntax tree are slower than those generating bytecode.

    
